name: API Pull Request

on:
    pull_request:
        paths:
            - "api/**"
            - ".github/**"
        types: [opened, synchronize, reopened, ready_for_review]

defaults:
    run:
        working-directory: api

jobs:
    test:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        name: API Unit Tests

        services:
            postgres:
                image: postgres:11.12-alpine
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports: ["5432:5432"]
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            max-parallel: 4
            matrix:
                python-version: ["3.7", "3.8", "3.9", "3.10"]

        steps:
            - name: Cloning repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
                  cache: "pip"

            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements-dev.txt

            - name: Check black formatting
              run: black --check .

            - name: Check flake8 linting
              working-directory: . # working dir should be root due to conflicts with pre-commit
              run: flake8 .

            - name: Check isort imports
              run: isort --check .

            - name: Create analytics database
              run: sudo -u postgres psql -c 'create database analytics;'

            - name: Run Tests
              env:
                  DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres"
                  ANALYTICS_DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/analytics"
                  DJANGO_SETTINGS_MODULE: "app.settings.test"
                  LOG_LEVEL: "INFO"
              run: |
                  pytest -p no:warnings
